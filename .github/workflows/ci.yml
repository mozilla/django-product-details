name: "CI" # Note that this name appears in the README's badge
on:
  push:
    branches:
      - master
  pull_request:
  release:
    types: [published]
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          #Â CPython
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
        django-tox-env:
          - "django22"
          - "django32"
          - "django40"
        exclude:
          # We don't want every combination of the above, as some are not compatible
          - python-version: "3.6"
            django-tox-env: "django40"

          - python-version: "3.7"
            django-tox-env: "django40"

          - python-version: "3.10"
            django-tox-env: "django22"

    name: Python ${{ matrix.python-version }} + ${{ matrix.django-tox-env }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install tox
        run: pip install tox
      - name: Run tox
        run: tox -e py${{ matrix.python-version }}-${{ matrix.django-tox-env }} --skip-missing-interpreter=false

  lint:
    runs-on: ubuntu-latest
    name: Flake 8
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.9
      - name: Install test requirements
        run: pip install tox flake8
      - name: Run tox
        run: tox -e py3.9-flake8

  release:
    name: django-mozilla-product-details Release
    if: github.event_name == 'release' && github.event.action == 'published'
    needs:
      - test
      - lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.9
      - name: Install lightest dependencies for successful packaging
        run: pip install Django requests build
      - name: Ensure the latest product-details json files are pulled in
        run: python updatejson.py
      - name: Build package for upload to PyPI
        run: python -m build .
      - name: Upload the distribution to PyPI
        uses: pypa/gh-action-pypi-publish@v1.13.0
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
